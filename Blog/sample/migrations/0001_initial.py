# Generated by Django 3.1.8 on 2024-06-17 07:57

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MyModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Enter the name of the item. E.g., 'Premium Coffee Beans'", max_length=100)),
                ('description', models.TextField(help_text="Enter a detailed description. E.g., 'High-quality Arabica beans from Colombia...'")),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time when the item was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The date and time when the item was last updated.')),
                ('is_active', models.BooleanField(default=True, help_text='Is the item currently active? E.g., True')),
                ('price', models.DecimalField(decimal_places=2, help_text="Enter the price of the item. E.g., '19.99'", max_digits=10)),
                ('quantity', models.IntegerField(help_text="Enter the quantity in stock. E.g., '100'")),
                ('category', models.CharField(choices=[('A', 'Category A'), ('B', 'Category B'), ('C', 'Category C')], help_text="Select a category for the item. E.g., 'A'", max_length=1)),
                ('email', models.EmailField(help_text="Enter a contact email. E.g., 'info@example.com'", max_length=254)),
                ('website', models.URLField(help_text="Enter the website URL. E.g., 'https://www.example.com'")),
                ('image', models.ImageField(help_text='Upload an image of the item.', upload_to='images/')),
                ('slug', models.SlugField(help_text="Enter a unique slug for the item. E.g., 'premium-coffee-beans'", unique=True)),
                ('ip_address', models.GenericIPAddressField(help_text="Enter an IP address. E.g., '192.168.1.1' or '2001:0db8:85a3:0000:0000:8a2e:0370:7334'")),
                ('rating', models.FloatField(help_text="Enter a rating between 0.0 and 5.0. E.g., '4.5'", validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('tags', models.JSONField(blank=True, default=list, help_text="Enter a list of tags in JSON format. E.g., ['coffee', 'arabica', 'premium']")),
                ('notes', models.TextField(blank=True, help_text="Enter any additional notes. E.g., 'Limited edition product'", null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RelatedModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text="Enter the title of the related item. E.g., 'Related Item Title'", max_length=200)),
                ('description', models.TextField(help_text="Enter a description for the related item. E.g., 'Detailed description of the related item...'")),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time when the related item was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The date and time when the related item was last updated.')),
                ('my_model_fk', models.ForeignKey(help_text='ForeignKey relationship to MyModel. Deletes related records if MyModel instance is deleted.', on_delete=django.db.models.deletion.CASCADE, related_name='related_models', to='sample.mymodel')),
                ('my_model_m2m', models.ManyToManyField(help_text='ManyToMany relationship to MyModel.', related_name='related_models_m2m', to='sample.MyModel')),
                ('my_model_o2o', models.OneToOneField(help_text='OneToOne relationship to MyModel. Deletes related record if MyModel instance is deleted.', on_delete=django.db.models.deletion.CASCADE, related_name='related_model', to='sample.mymodel')),
            ],
        ),
    ]
